{"version":3,"sources":["functions.js","index.js"],"names":["chunk","array","size","length","updatedArray","reduce","acc","element","index","fullArray","push","slice","start","end","compact","filter","item","concat","i","arguments","Array","isArray","difference","args","console","log","every","ele","itemInner","ActualEle","$v","undefined","NaN"],"mappings":"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","file":"LodashDup.e31bb0bc.map","sourceRoot":"..","sourcesContent":["export function chunk(array = [], size = 1) {\n  if (size < 1) {\n    return [];\n  };\n  if (size >= array.length) {\n    return array;\n  };\n  var updatedArray = [];\n  array.reduce((acc, element, index, fullArray) => {\n    if ((index + 1) % size == 0) {\n      updatedArray.push(array.slice(acc.start, acc.end));\n      acc.start += size;\n      acc.end += size;\n    }\n    if (index == fullArray.length - 1 && (index + 1) % size != 0) {\n      updatedArray.push(array.slice(acc.start));\n    }\n    return acc;\n  }, {\n    start: 0,\n    end: size\n  })\n  return updatedArray;\n}\n\nexport function compact(array) {\n\n  return array.filter((item) => item)\n}\n\nexport function concat(array) {\n  var updatedArray = array;\n  for (let i = 1; i < arguments.length; i++) {\n    updatedArray.push(Array.isArray(arguments[i]) ? arguments[i][0] : arguments[i]);\n  }\n  return updatedArray;\n}\n\nexport function difference(array, ...args) {\n  console.log(args)\n  var updatedArray = [];\n  for (item of array) {\n    if (args.every((ele) => {\n        return Array.isArray(ele) ? ele.every((itemInner) => ActualEle != itemInner) : ActualEle != item;\n      })) {\n      updatedArray.push(item);\n    }\n  }\n  return updatedArray;\n}\n\n\nconsole.log(difference([1, 2, 3, 4, 5], [2, 3], 4, 5))","import {\n  chunk,\n  compact,\n  concat,\n  difference\n} from './functions.js';\n\nconst $v = {\n  chunk,\n  compact,\n  concat,\n  difference\n}\n\n\nconsole.log($v.chunk([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 4));\nconsole.log($v.compact([undefined, 2, NaN, 4, 5, \"\", 7, null, false, 10]));\nconsole.log($v.concat([1, 2, 3], 1, \"Hello\", [3], [\n  [4]\n]));\nconsole.log($v.difference([1, 2, 3, 4], [2, 3]));"]}